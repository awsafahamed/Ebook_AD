@{
    ViewData["Title"] = "Home Page";
}


<section id="hero" class="d-flex align-items-center">
    <div class="h-100">
        <div class="row justify-content-center align-items-center h-100">
            <div class="col-md-6 justify-content-center order-2 order-md-1">
                <div class="typography">
                    <h1>
                        Discover Your Next Adventure
                    </h1>
                    <h3 data-aos="fade-up">
                        Explore our extensive collection of eBooks 
                        Listening <br> and find your new favorite.
                    </h3>



                </div>
                <br>
                <a data-aos="fade-up"
                   href=""
                   class="btn-anim "> Explore Books</a>


               

            </div>

            <div class="col-md-6 order-1 order-md-2  lottie p-3">
                <div id="lottie-container"></div>
            </div>



        </div>

</section>



<section id="about" class="bg-light h-100 p-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <img src="images/about-us.png" class="img-fluid" alt="About Us">
            </div>
            <div class="col-md-6">
                <h2>About Us</h2>
                <p>We are passionate about bringing stories to life through eBooks and audiobooks. Our mission is to make reading accessible and enjoyable for everyone.</p>
                <a href="#features" class="btn-anim">Learn More</a>
            </div>
        </div>
    </div>
</section>


<section id="books" class="p-5 text-center">
    <div class="container">
        <h2 class="mb-4">Our Latest eBooks</h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4" id="book-container">
            @foreach (var book in Model)
            {
                <div class="col">
                    <div class="card h-100 border-0 shadow-sm card-book-main">
                        @if (!string.IsNullOrEmpty(book.ImageUrl))
                        {
                            <img src="@book.ImageUrl" alt="@book.Title" class="card-img-top rounded-top" style="height: 400px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="d-flex align-items-center justify-content-center bg-light rounded-top" style="height: 400px;">
                                <span class="text-muted">No Image</span>
                            </div>
                        }
                        <div class="card-body text-start">
                            <h5 class="card-title text-dark">@book.Title</h5>
                            <p class="mb-1 text-muted">Author: @book.Author</p>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center bg-white border-0">
                            <p class="mb-0 fw-bold text-dark">Rs. @book.Price</p>
                            <div>
                                <a href="@Url.Action("Details", "Home", new { id = book.BookId })" class="btn btn-sm btn-outline-dark">View Details</a>
                                <a class="btn btn-sm btn-danger btn-cart" data-book-id="@book.BookId" data-quantity="1">
                                    <i class="bi bi-bag"></i> Add to Cart
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<style>
    #books {
        background-color: #f8f9fa;
    }

    .card-book-main {
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card-book-main:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

    .card-body {
        padding: 1rem;
    }

    .card-title {
        font-size: 16px;
        font-weight: 600;
    }

    .card-footer {
        padding: 0.75rem 1rem;
    }

    .btn-cart {
        background-color: #b70000;
        color: #fff;
        font-size: 12px;
    }

        .btn-cart:hover {
            background-color: #900000;
        }

    .btn-outline-dark {
        font-size: 12px;
    }

        .btn-outline-dark:hover {
            background-color: #000;
            color: #fff;
        }
</style>

<!-- Features Section -->
<section id="features" class="p-5 text-center">
    <div class="container">
        <h2 class="mb-4">Features</h2>
        <div class="row">
            <div class="col-md-4">
                <i class="fa-solid fa-book-open-reader fa-3x mb-3"></i>
                <h4>Wide Collection</h4>
                <p>Browse through a wide variety of genres and topics.</p>
            </div>
            <div class="col-md-4">
                <i class="fa-solid fa-headphones fa-3x mb-3"></i>
                <h4>Audiobooks</h4>
                <p>Listen to your favorite books on the go.</p>
            </div>
            <div class="col-md-4">
                <i class="fa-solid fa-cloud-download fa-3x mb-3"></i>
                <h4>Offline Reading</h4>
                <p>Download and enjoy books anytime, anywhere.</p>
            </div>
        </div>
    </div>
</section>

<!-- Call to Action -->
<section id="cta" class="text-white text-center p-5" style="background-color: #b70000;">
    <div class="container">
        <h2 class="mb-4">Ready to Start Your Adventure?</h2>
        <p class="mb-4">Sign up now and gain access to thousands of eBooks and audiobooks.</p>
        <a href="register.html" class="btn-anim">Join Now</a>
    </div>
</section>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize the Lottie animation
        lottie.loadAnimation({
            container: document.getElementById('lottie-container'), // The container for the animation
            renderer: 'svg', // Render type (svg, canvas, or html)
            loop: true, // Loop the animation
            autoplay: true, // Play automatically
            path: 'images/book.json', // Path to the Lottie JSON file
        });
    });


        document.addEventListener("DOMContentLoaded", function () {
            // Add click event listener to all Add to Cart buttons
            document.querySelectorAll(".btn-cart").forEach(function (button) {
                button.addEventListener("click", function (e) {
                    e.preventDefault(); // Prevent the default action

                    // Get book ID and quantity
                    const bookId = this.getAttribute("data-book-id");
                    const quantity = this.getAttribute("data-quantity");

                    // Send AJAX request
                    fetch(`/Cart/AddToCart?bookId=${bookId}&quantity=${quantity}`, {
                        method: "POST",
                        headers: {
                            "X-Requested-With": "XMLHttpRequest",
                            "Content-Type": "application/json",
                        },
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error("Network response was not ok");
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                alert("Item added to cart!");
                                // Optionally, update cart UI here
                            } else {
                                alert("Failed to add item to cart.");
                            }
                        })
                        .catch(error => {
                            console.error("There was a problem with the fetch operation:", error);
                            alert("An error occurred. Please try again.");
                        });
                });
            });
        });



</script>